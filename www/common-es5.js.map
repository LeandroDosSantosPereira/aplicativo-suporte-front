{"version":3,"sources":["node_modules/@ionic/core/dist/esm/framework-delegate-d1eb6504.js","node_modules/@ionic/core/dist/esm/haptic-da73c8fd.js","node_modules/@ionic/core/dist/esm/spinner-configs-c78e170e.js","node_modules/@ionic/core/dist/esm/theme-c2dc54d9.js","node_modules/jwt-decode/build/jwt-decode.esm.js","src/app/auth/currentuser.ts","src/app/auth/formatdate.ts","src/app/auth/ticket.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,GAAA,EAAA,YAAA;AAAA,aAAA,eAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,GAAA,EAAA,YAAA;AAAA,aAAA,eAAA;AAAA,KAAA;;AAAA,QAAA,eAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAA,iBAAA,QAAA,EAAA,SAAA,EAAA,SAAA,EAAA,UAAA,EAAA,cAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACA,QADA;AAAA;AAAA;AAAA;;AAAA,iDAEA,QAAA,CAAA,eAAA,CAAA,SAAA,EAAA,SAAA,EAAA,cAAA,EAAA,UAAA,CAFA;;AAAA;AAAA,sBAIA,OAAA,SAAA,KAAA,QAAA,IAAA,EAAA,SAAA,YAAA,WAAA,CAJA;AAAA;AAAA;AAAA;;AAAA,sBAKA,IAAA,KAAA,CAAA,+BAAA,CALA;;AAAA;AAOA,gBAAA,EAPA,GAOA,OAAA,SAAA,KAAA,QAAA,GACA,SAAA,CAAA,aAAA,IAAA,SAAA,CAAA,aAAA,CAAA,aAAA,CAAA,SAAA,CADA,GAEA,SATA;;AAUA,oBAAA,UAAA,EAAA;AACA,kBAAA,UAAA,CAAA,OAAA,CAAA,UAAA,CAAA;AAAA,2BAAA,EAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,CAAA;AAAA,mBAAA;AACA;;AACA,oBAAA,cAAA,EAAA;AACA,kBAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,cAAA;AACA;;AACA,gBAAA,SAAA,CAAA,WAAA,CAAA,EAAA;;AAhBA,qBAiBA,EAAA,CAAA,gBAjBA;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAkBA,EAAA,CAAA,gBAAA,EAlBA;;AAAA;AAAA,iDAoBA,EApBA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAA;;AAAA,sBAAA,eAAA;AAAA;AAAA;AAAA,OAAA;;AAsBA,QAAA,eAAA,GAAA,SAAA,eAAA,CAAA,QAAA,EAAA,OAAA,EAAA;AACA,UAAA,OAAA,EAAA;AACA,YAAA,QAAA,EAAA;AACA,cAAA,SAAA,GAAA,OAAA,CAAA,aAAA;AACA,iBAAA,QAAA,CAAA,iBAAA,CAAA,SAAA,EAAA,OAAA,CAAA;AACA;;AACA,QAAA,OAAA,CAAA,MAAA;AACA;;AACA,aAAA,OAAA,CAAA,OAAA,EAAA;AACA,KATA;;;;;;;;;;;;;;;;;ACtBA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,GAAA,EAAA,YAAA;AAAA,aAAA,YAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,GAAA,EAAA,YAAA;AAAA,aAAA,oBAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,GAAA,EAAA,YAAA;AAAA,aAAA,sBAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,GAAA,EAAA,YAAA;AAAA,aAAA,kBAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,GAAA,EAAA,YAAA;AAAA,aAAA,eAAA;AAAA,KAAA;;AAAA,QAAA,YAAA,GAAA;AACA,MAAA,SADA,uBACA;AACA,YAAA,GAAA,GAAA,MAAA;AACA,eAAA,GAAA,CAAA,YAAA,IAAA,GAAA,CAAA,SAAA,IAAA,GAAA,CAAA,SAAA,CAAA,iBAAA,CAAA,SAAA,CAAA,IAAA,GAAA,CAAA,SAAA,CAAA,OAAA,CAAA,OAAA;AACK,OAJL;AAKA,MAAA,SALA,uBAKA;AACA,eAAA,CAAA,CAAA,KAAA,SAAA,EAAA;AACK,OAPL;AAQA,MAAA,SARA,uBAQA;AACA,eAAA,CAAA,CAAA,MAAA,CAAA,YAAA;AACK,OAVL;AAWA,MAAA,WAXA,yBAWA;AACA,YAAA,GAAA,GAAA,MAAA;AACA,eAAA,CAAA,CAAA,GAAA,CAAA,SAAA;AACK,OAdL;AAeA,MAAA,MAfA,kBAeA,OAfA,EAeA;AACA,YAAA,MAAA,GAAA,KAAA,SAAA,EAAA;;AACA,YAAA,CAAA,MAAA,EAAA;AACA;AACA;;AACA,YAAA,KAAA,GAAA,KAAA,WAAA,KAAA,OAAA,CAAA,KAAA,CAAA,WAAA,EAAA,GAAA,OAAA,CAAA,KAAA;AACA,QAAA,MAAA,CAAA,MAAA,CAAA;AAAuB,UAAA,KAAA,EAAA;AAAvB,SAAA;AACK,OAtBL;AAuBA,MAAA,YAvBA,wBAuBA,OAvBA,EAuBA;AACA,YAAA,MAAA,GAAA,KAAA,SAAA,EAAA;;AACA,YAAA,CAAA,MAAA,EAAA;AACA;AACA;;AACA,YAAA,KAAA,GAAA,KAAA,WAAA,KAAA,OAAA,CAAA,KAAA,CAAA,WAAA,EAAA,GAAA,OAAA,CAAA,KAAA;AACA,QAAA,MAAA,CAAA,YAAA,CAAA;AAA6B,UAAA,KAAA,EAAA;AAA7B,SAAA;AACK,OA9BL;AA+BA,MAAA,SA/BA,uBA+BA;AACA,aAAA,MAAA,CAAA;AAAqB,UAAA,KAAA,EAAA;AAArB,SAAA;AACK,OAjCL;AAkCA,MAAA,cAlCA,4BAkCA;AACA,YAAA,MAAA,GAAA,KAAA,SAAA,EAAA;;AACA,YAAA,CAAA,MAAA,EAAA;AACA;AACA;;AACA,YAAA,KAAA,WAAA,EAAA,EAAA;AACA,UAAA,MAAA,CAAA,cAAA;AACA,SAFA,MAGA;AACA,UAAA,MAAA,CAAA,qBAAA;AACA;AACK,OA7CL;AA8CA,MAAA,gBA9CA,8BA8CA;AACA,YAAA,MAAA,GAAA,KAAA,SAAA,EAAA;;AACA,YAAA,CAAA,MAAA,EAAA;AACA;AACA;;AACA,YAAA,KAAA,WAAA,EAAA,EAAA;AACA,UAAA,MAAA,CAAA,gBAAA;AACA,SAFA,MAGA;AACA,UAAA,MAAA,CAAA,uBAAA;AACA;AACK,OAzDL;AA0DA,MAAA,YA1DA,0BA0DA;AACA,YAAA,MAAA,GAAA,KAAA,SAAA,EAAA;;AACA,YAAA,CAAA,MAAA,EAAA;AACA;AACA;;AACA,YAAA,KAAA,WAAA,EAAA,EAAA;AACA,UAAA,MAAA,CAAA,gBAAA;AACA,SAFA,MAGA;AACA,UAAA,MAAA,CAAA,uBAAA;AACA;AACA;AArEA,KAAA;AAuEA;;;;;AAIA,QAAA,eAAA,GAAA,SAAA,eAAA,GAAA;AACA,MAAA,YAAA,CAAA,SAAA;AACA,KAFA;AAGA;;;;;AAGA,QAAA,oBAAA,GAAA,SAAA,oBAAA,GAAA;AACA,MAAA,YAAA,CAAA,cAAA;AACA,KAFA;AAGA;;;;;AAGA,QAAA,sBAAA,GAAA,SAAA,sBAAA,GAAA;AACA,MAAA,YAAA,CAAA,gBAAA;AACA,KAFA;AAGA;;;;;;AAIA,QAAA,kBAAA,GAAA,SAAA,kBAAA,GAAA;AACA,MAAA,YAAA,CAAA,YAAA;AACA,KAFA;AAGA;;;;;;AAIA,QAAA,YAAA,GAAA,SAAA,YAAA,CAAA,OAAA,EAAA;AACA,MAAA,YAAA,CAAA,MAAA,CAAA,OAAA;AACA,KAFA;;;;;;;;;;;;;;;;;ACrGA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,GAAA,EAAA,YAAA;AAAA,aAAA,QAAA;AAAA,KAAA;;AAAA,QAAA,QAAA,GAAA;AACA,iBAAA;AACA,QAAA,GAAA,EAAA,IADA;AAEA,QAAA,OAAA,EAAA,CAFA;AAGA,QAAA,EAAA,EAAA,YAAA,GAAA,EAAA,KAAA,EAAA,KAAA,EAAA;AACA,cAAA,cAAA,aAAsC,GAAA,GAAA,KAAA,GAAA,KAAA,GAAA,GAAtC,OAAA;AACA,cAAA,KAAA,GAAA,IAAA,IAAA,CAAA,EAAA,GAAA,KAAA,GAAA,KAAA;AACA,iBAAA;AACA,YAAA,CAAA,EAAA,CADA;AAEA,YAAA,KAAA,EAAA;AACA,+BAA8B,IAAA,IAAA,CAAA,GAAA,CAAA,KAAA,CAA9B,OADA;AAEA,gCAA+B,IAAA,IAAA,CAAA,GAAA,CAAA,KAAA,CAA/B,OAFA;AAGA,iCAAA;AAHA;AAFA,WAAA;AAQA;AAdA,OADA;AAiBA,iBAAA;AACA,QAAA,GAAA,EAAA,IADA;AAEA,QAAA,OAAA,EAAA,CAFA;AAGA,QAAA,EAAA,EAAA,YAAA,GAAA,EAAA,KAAA,EAAA,KAAA,EAAA;AACA,cAAA,IAAA,GAAA,KAAA,GAAA,KAAA;AACA,cAAA,cAAA,aAAsC,GAAA,GAAA,IAAA,GAAA,GAAtC,OAAA;AACA,cAAA,KAAA,GAAA,IAAA,IAAA,CAAA,EAAA,GAAA,IAAA;AACA,iBAAA;AACA,YAAA,CAAA,EAAA,CADA;AAEA,YAAA,KAAA,EAAA;AACA,+BAA8B,IAAA,IAAA,CAAA,GAAA,CAAA,KAAA,CAA9B,OADA;AAEA,gCAA+B,IAAA,IAAA,CAAA,GAAA,CAAA,KAAA,CAA/B,OAFA;AAGA,iCAAA;AAHA;AAFA,WAAA;AAQA;AAfA,OAjBA;AAkCA,kBAAA;AACA,QAAA,GAAA,EAAA,IADA;AAEA,QAAA,WAAA,EAAA,IAFA;AAGA,QAAA,OAAA,EAAA,CAHA;AAIA,QAAA,EAAA,EAAA,cAAA;AACA,iBAAA;AACA,YAAA,CAAA,EAAA,EADA;AAEA,YAAA,EAAA,EAAA,EAFA;AAGA,YAAA,EAAA,EAAA,EAHA;AAIA,YAAA,IAAA,EAAA,MAJA;AAKA,YAAA,OAAA,EAAA,aALA;AAMA,YAAA,SAAA,EAAA,gBANA;AAOA,YAAA,KAAA,EAAA;AAPA,WAAA;AASA;AAdA,OAlCA;AAkDA,kBAAA;AACA,QAAA,GAAA,EAAA,GADA;AAEA,QAAA,OAAA,EAAA,CAFA;AAGA,QAAA,EAAA,EAAA,cAAA;AACA,iBAAA;AACA,YAAA,CAAA,EAAA,EADA;AAEA,YAAA,KAAA,EAAA;AAFA,WAAA;AAIA;AARA,OAlDA;AA4DA,cAAA;AACA,QAAA,GAAA,EAAA,GADA;AAEA,QAAA,OAAA,EAAA,CAFA;AAGA,QAAA,EAAA,EAAA,YAAA,CAAA,EAAA,KAAA,EAAA;AACA,cAAA,cAAA,GAAA,EAAA,MAAA,KAAA,IAAA,IAAA;AACA,iBAAA;AACA,YAAA,CAAA,EAAA,CADA;AAEA,YAAA,KAAA,EAAA;AACA,gCAA+B,IAAA,IAAA,KAA/B,OADA;AAEA,iCAAA;AAFA;AAFA,WAAA;AAOA;AAZA,OA5DA;AA0EA,eAAA;AACA,QAAA,GAAA,EAAA,IADA;AAEA,QAAA,KAAA,EAAA,EAFA;AAGA,QAAA,EAAA,EAAA,YAAA,GAAA,EAAA,KAAA,EAAA,KAAA,EAAA;AACA,cAAA,SAAA,oBAAwC,KAAA,KAAA,IAAA,KAAA,GAAA,CAAA,GAAA,GAAA,GAAA,CAAA,GAAA,CAAxC,SAAA;AACA,cAAA,cAAA,aAAsC,GAAA,GAAA,KAAA,GAAA,KAAA,GAAA,GAAtC,OAAA;AACA,iBAAA;AACA,YAAA,EAAA,EAAA,EADA;AAEA,YAAA,EAAA,EAAA,EAFA;AAGA,YAAA,KAAA,EAAA;AACA,2BAAA,SADA;AAEA,iCAAA;AAFA;AAHA,WAAA;AAQA;AAdA,OA1EA;AA0FA,qBAAA;AACA,QAAA,GAAA,EAAA,IADA;AAEA,QAAA,KAAA,EAAA,EAFA;AAGA,QAAA,EAAA,EAAA,YAAA,GAAA,EAAA,KAAA,EAAA,KAAA,EAAA;AACA,cAAA,SAAA,oBAAwC,KAAA,KAAA,IAAA,KAAA,GAAA,CAAA,GAAA,GAAA,GAAA,CAAA,GAAA,CAAxC,SAAA;AACA,cAAA,cAAA,aAAsC,GAAA,GAAA,KAAA,GAAA,KAAA,GAAA,GAAtC,OAAA;AACA,iBAAA;AACA,YAAA,EAAA,EAAA,EADA;AAEA,YAAA,EAAA,EAAA,EAFA;AAGA,YAAA,KAAA,EAAA;AACA,2BAAA,SADA;AAEA,iCAAA;AAFA;AAHA,WAAA;AAQA;AAdA;AA1FA,KAAA;AA2GA,QAAA,QAAA,GAAA,QAAA;;;;;;;;;;;;;;;;AC3GA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,GAAA,EAAA,YAAA;AAAA,aAAA,kBAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,GAAA,EAAA,YAAA;AAAA,aAAA,WAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,GAAA,EAAA,YAAA;AAAA,aAAA,WAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,GAAA,EAAA,YAAA;AAAA,aAAA,OAAA;AAAA,KAAA;;AAAA,QAAA,WAAA,GAAA,SAAA,WAAA,CAAA,QAAA,EAAA,EAAA,EAAA;AACA,aAAA,EAAA,CAAA,OAAA,CAAA,QAAA,MAAA,IAAA;AACA,KAFA;AAGA;;;;;AAGA,QAAA,kBAAA,GAAA,SAAA,kBAAA,CAAA,KAAA,EAAA;AACA,aAAA,OAAA,KAAA,KAAA,QAAA,IAAA,KAAA,CAAA,MAAA,GAAA,CAAA;AACA,qBAAA;AADA,6BAEsB,KAFtB,GAE4B,IAF5B,IAGK,SAHL;AAIA,KALA;;AAMA,QAAA,YAAA,GAAA,SAAA,YAAA,CAAA,OAAA,EAAA;AACA,UAAA,OAAA,KAAA,SAAA,EAAA;AACA,YAAA,KAAA,GAAA,KAAA,CAAA,OAAA,CAAA,OAAA,IAAA,OAAA,GAAA,OAAA,CAAA,KAAA,CAAA,GAAA,CAAA;AACA,eAAA,KAAA,CACA,MADA,CACA,UAAA,CAAA;AAAA,iBAAA,CAAA,IAAA,IAAA;AAAA,SADA,EAEA,GAFA,CAEA,UAAA,CAAA;AAAA,iBAAA,CAAA,CAAA,IAAA,EAAA;AAAA,SAFA,EAGA,MAHA,CAGA,UAAA,CAAA;AAAA,iBAAA,CAAA,KAAA,EAAA;AAAA,SAHA,CAAA;AAIA;;AACA,aAAA,EAAA;AACA,KATA;;AAUA,QAAA,WAAA,GAAA,SAAA,WAAA,CAAA,OAAA,EAAA;AACA,UAAA,GAAA,GAAA,EAAA;AACA,MAAA,YAAA,CAAA,OAAA,CAAA,CAAA,OAAA,CAAA,UAAA,CAAA;AAAA,eAAA,GAAA,CAAA,CAAA,CAAA,GAAA,IAAA;AAAA,OAAA;AACA,aAAA,GAAA;AACA,KAJA;;AAKA,QAAA,MAAA,GAAA,sBAAA;;AACA,QAAA,OAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAA,kBAAA,GAAA,EAAA,EAAA,EAAA,SAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA,GAAA,IAAA,IAAA,IAAA,GAAA,CAAA,CAAA,CAAA,KAAA,GAAA,IAAA,CAAA,MAAA,CAAA,IAAA,CAAA,GAAA,CADA;AAAA;AAAA;AAAA;;AAEA,gBAAA,MAFA,GAEA,QAAA,CAAA,aAAA,CAAA,YAAA,CAFA;;AAAA,qBAGA,MAHA;AAAA;AAAA;AAAA;;AAIA,oBAAA,EAAA,IAAA,IAAA,EAAA;AACA,kBAAA,EAAA,CAAA,cAAA;AACA;;AANA,kDAOA,MAAA,CAAA,IAAA,CAAA,GAAA,EAAA,SAAA,CAPA;;AAAA;AAAA,kDAUA,KAVA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAA;;AAAA,sBAAA,OAAA;AAAA;AAAA;AAAA,OAAA;;;;;;;;;;;;;;;;;AC5BA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,mBAAA,EAAA,YAAA;AAAA,aAAA,CAAA;AAAA,KAAA;;AAAA,aAAA,CAAA,CAAA,CAAA,EAAA;AAAc,WAAA,OAAA,GAAA,CAAA;AAAe;;AAAA,IAAA,CAAA,CAAA,SAAA,GAAA,IAAA,KAAA,EAAA,EAAA,CAAA,CAAA,SAAA,CAAA,IAAA,GAAA,uBAAA;;AAA+D,QAAA,CAAA,GAAA,eAAA,OAAA,MAAA,IAAA,MAAA,CAAA,IAAA,IAAA,MAAA,CAAA,IAAA,CAAA,IAAA,CAAA,MAAA,CAAA,IAAA,UAAA,CAAA,EAAA;AAAqF,UAAA,CAAA,GAAA,MAAA,CAAA,CAAA,CAAA,CAAA,OAAA,CAAA,KAAA,EAAA,EAAA,CAAA;AAAkC,UAAA,CAAA,CAAA,MAAA,GAAA,CAAA,IAAA,CAAA,EAAA,MAAA,IAAA,CAAA,CAAA,mEAAA,CAAA;;AAAkG,WAAA,IAAA,CAAA,EAAA,CAAA,EAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,EAAA,EAAyB,CAAA,GAAA,CAAA,CAAA,MAAA,CAAA,CAAA,EAAA,CAAzB,EAAyC,CAAA,CAAA,KAAA,CAAA,GAAA,CAAA,GAAA,CAAA,GAAA,KAAA,CAAA,GAAA,CAAA,GAAA,CAAA,EAAA,CAAA,KAAA,CAAA,IAAA,CAAA,IAAA,MAAA,CAAA,YAAA,CAAA,MAAA,CAAA,KAAA,CAAA,CAAA,GAAA,CAAA,GAAA,CAAA,CAAA,CAAA,GAAA,CAAzC;AAAyC,QAAA,CAAA,GAAA,oEAAA,OAAA,CAAA,CAAA,CAAA;AAAzC;;AAA+L,aAAA,CAAA;AAAA,KAAxZ;;AAAka,aAAA,CAAA,CAAA,CAAA,EAAA;AAAc,UAAA,CAAA,GAAA,CAAA,CAAA,OAAA,CAAA,IAAA,EAAA,GAAA,EAAA,OAAA,CAAA,IAAA,EAAA,GAAA,CAAA;;AAA4C,cAAA,CAAA,CAAA,MAAA,GAAA,CAAA;AAAmB,aAAA,CAAA;AAAA;;AAAa,aAAA,CAAA;AAAA,UAAA,CAAA,IAAA,IAAA;AAAe;;AAAM,aAAA,CAAA;AAAA,UAAA,CAAA,IAAA,GAAA;AAAc;;AAAM;AAAA,gBAAA,2BAAA;AAAzE;;AAAkH,UAAA;AAAI,eAAA,UAAA,CAAA,EAAA;AAAmB,iBAAA,kBAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,OAAA,CAAA,MAAA,EAAA,UAAA,CAAA,EAAA,CAAA,EAAA;AAA6D,gBAAA,CAAA,GAAA,CAAA,CAAA,UAAA,CAAA,CAAA,EAAA,QAAA,CAAA,EAAA,EAAA,WAAA,EAAA;AAAiD,mBAAA,CAAA,CAAA,MAAA,GAAA,CAAA,KAAA,CAAA,GAAA,MAAA,CAAA,GAAA,MAAA,CAAA;AAAmC,WAAjJ,CAAA,CAAA;AAAqJ,SAAxK,CAAwK,CAAxK,CAAA;AAA4K,OAAhL,CAAgL,OAAA,CAAA,EAAA;AAAS,eAAA,CAAA,CAAA,CAAA,CAAA;AAAA;AAAa;;AAAA,aAAA,CAAA,CAAA,CAAA,EAAA;AAAc,WAAA,OAAA,GAAA,CAAA;AAAe;;AAAA,aAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA;AAAgB,UAAA,YAAA,OAAA,CAAA,EAAA,MAAA,IAAA,CAAA,CAAA,yBAAA,CAAA;AAA6D,UAAA,CAAA,GAAA,CAAA,CAAA,KAAA,CAAA,CAAA,GAAA,CAAA,IAAA,EAAA,EAAmB,MAAnB,GAAmB,CAAnB,GAAmB,CAAnB;;AAAgC,UAAA;AAAI,eAAA,IAAA,CAAA,KAAA,CAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAA,GAAA,EAAA,CAAA,CAAA,CAAA,CAAA;AAAsC,OAA1C,CAA0C,OAAA,CAAA,EAAA;AAAS,cAAA,IAAA,CAAA,CAAA,8BAAA,CAAA,CAAA,OAAA,CAAA;AAAA;AAAoD;;AAAA,IAAA,CAAA,CAAA,SAAA,GAAA,IAAA,KAAA,EAAA,EAAA,CAAA,CAAA,SAAA,CAAA,IAAA,GAAA,mBAAA;AAA0E;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,CAAA,C,CAC3qC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0DCEA;;;QAEa,W;;;;;;;;;AAQX;kCACO;AACL;AACA,eAAK,IAAL;;AACA,cAAI;AACF,gBAAM,GAAG,GAAG,YAAY,CAAC,OAAb,CAAqB,OAArB,CAAZ;AACA,gBAAI,GAAG,GAAG,MAAA,CAAA,uCAAA,CAAA,SAAA,CAAA,CAAA,CAAW,GAAX,CAAV,CAFE,CAEyB;;AAC3B,iBAAK,EAAL,GAAU,IAAI,CAAC,SAAL,CAAe,GAAG,CAAC,OAAnB,CAAV;AACA,mBAAO,KAAK,EAAZ;AACA,iBAAK,KAAL;AACD,WAND,CAME,OAAO,EAAP,EAAW;AACX,mBAAO,IAAP;AACD;AACF;;;+BAES;;;;;;;;;AACO,2BAAM,KAAK,WAAL,CAAiB,MAAjB,CAAwB;AAAE,sBAAA,OAAO,EAAE;AAAX,qBAAxB,CAAN;;;AAAf,yBAAK,O;;AACL,2BAAM,KAAK,OAAL,CAAa,OAAb,EAAN;;;;;;;;;AAED;;;gCAGI;AACH,eAAK,OAAL,CAAa,OAAb;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCrCU,U;;;;;;;;;AAET;+BACO,C,EAAC;AACJ,cAAI,IAAI,GAAG,IAAI,IAAJ,CAAS,CAAT,CAAX;AACA,cAAI,aAAa,GAAK,IAAI,CAAC,OAAL,EAAF,GAChB,GADgB,IACR,IAAI,CAAC,QAAL,KAAkB,CADV,IACgB,GADhB,GAEhB,IAAI,CAAC,WAAL,EAFgB,GAEK,KAFL,GAEa,IAAI,CAAC,QAAL,EAFb,GAGhB,GAHgB,GAGV,IAAI,CAAC,UAAL,EAHV;AAIA,iBAAO,aAAP;AACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACIL,QAAa,aAAb;AAAA;AAAA;AASE,6BACU,IADV,EAES,SAFT,EAGS,WAHT,EAIS,SAJT,EAImC;AAAA;;AAHzB,aAAA,IAAA,GAAA,IAAA;AACD,aAAA,SAAA,GAAA,SAAA;AACA,aAAA,WAAA,GAAA,WAAA;AACA,aAAA,SAAA,GAAA,SAAA,CAA0B,CAXnC;;AACA,aAAA,IAAA,GAAsB,IAAI,2CAAA,CAAA,eAAA,CAAJ,EAAtB,CAUmC,CARnC;;AACQ,aAAA,GAAA,GAAM,KAAK,IAAL,CAAU,aAAV,GAA0B,gBAAhC,CAO2B,CAGnC;;AACA,aAAA,KAAA,GAAa,YAAY,CAAC,OAAb,CAAqB,OAArB,CAAb;AACA,aAAA,OAAA,GAAe,IAAI,iDAAA,CAAA,aAAA,CAAJ,CAAgB;AAC7B,UAAA,aAAa,EAAE,YAAY,KAAK;AADH,SAAhB,CAAf,CALmC,CA2BnC;;AACA,aAAA,WAAA,GAAc;AACZ,UAAA,OAAO,EAAE,IAAI,iDAAA,CAAA,aAAA,CAAJ,CAAgB;AACvB,4BAAgB;AADO,WAAhB;AADG,SAAd;AA3BK,OAdP,CAsBE;;;AAtBF;AAAA;AAAA,oCAuBc,KAvBd,EAuBsC;AAClC,cAAI,KAAK,CAAC,KAAN,YAAuB,UAA3B,EAAuC;AACrC;AACA,YAAA,OAAO,CAAC,KAAR,CAAc,oBAAd,EAAoC,KAAK,CAAC,KAAN,CAAY,OAAhD;AACD,WAHD,MAGO;AACL;AACA;AACA,YAAA,OAAO,CAAC,KAAR,CACE,gCAAyB,KAAK,CAAC,MAA/B,8BACa,KAAK,CAAC,KADnB,CADF;AAGD,WAViC,CAWlC;;;AACA,iBAAO,MAAA,CAAA,gEAAA,CAAA,YAAA,CAAA,CAAA,CACL,iDADK,CAAP;AAED;AArCH;AAAA;AA+CE;AA/CF,wCAgDqB;;;;;;;;;;;;AAED,2BAAM,KAAK,WAAL,CAAiB,MAAjB,CAAwB;AAAE,sBAAA,OAAO,EAAE;AAAX,qBAAxB,CAAN;;;AAAV,oBAAA,O;;AACN,2BAAM,OAAO,CAAC,OAAR,EAAN;;;sDACO,IAAI,OAAJ,CAAY,UAAA,OAAO,EAAG;AAC3B,sBAAA,KAAI,CAAC,IAAL,CAAU,GAAV,CAAc,KAAI,CAAC,GAAnB,EACE;AAAE,wBAAA,OAAO,EAAE,KAAI,CAAC;AAAhB,uBADF,EAC6B,SAD7B,CACuC,UAAA,IAAI,EAAG;AAC1C,wBAAA,OAAO,CAAC,IAAD,CAAP,CAD0C,CAE1C;;AACA,wBAAA,OAAO,CAAC,OAAR,GAH0C,CAI1C;AACD,uBANH,EAMK,UAAA,GAAG,EAAG;AACP,wBAAA,OAAO,CAAC,GAAR,CAAY,GAAZ;AACD,uBARH;AASD,qBAVM,C;;;;;;;;;AAYR,SAhEH,CAmEE;;AAnEF;AAAA;AAAA,+BAoES,CApET,EAoEe;AACX,eAAK,WAAL,CAAiB,OAAjB,GACE,KAAK,WAAL,CAAiB,OAAjB,CAAyB,GAAzB,CAA6B,eAA7B,EAA8C,KAAK,KAAnD,CADF;AAEA,iBAAO,KAAK,IAAL,CAAU,IAAV,WAAkB,KAAK,GAAvB,GAA8B,CAA9B,EAAiC,KAAK,WAAtC,CAAP;AACD,SAxEH,CA0EE;;AA1EF;AAAA;AAAA,sCA2EsB,EA3EtB,EA2EwB;;;;;;;;;;;;AAEJ,2BAAM,KAAK,WAAL,CAAiB,MAAjB,CAAwB;AAAE,sBAAA,OAAO,EAAE;AAAX,qBAAxB,CAAN;;;AAAV,oBAAA,O;;AACN,2BAAM,OAAO,CAAC,OAAR,EAAN;;;sDACO,IAAI,OAAJ,CAAY,UAAA,OAAO,EAAG;AAC3B,sBAAA,MAAI,CAAC,IAAL,CAAU,GAAV,CAAc,MAAI,CAAC,GAAL,GAAW,GAAX,GAAiB,EAA/B,EACE;AAAE,wBAAA,OAAO,EAAE,MAAI,CAAC;AAAhB,uBADF,EAC6B,SAD7B,CACuC,UAAA,IAAI,EAAG;AAC1C,wBAAA,OAAO,CAAC,IAAD,CAAP;AACA,wBAAA,MAAI,CAAC,OAAL,GAAe,IAAf,CAF0C,CAG1C;;AACA,wBAAA,OAAO,CAAC,OAAR;AACD,uBANH,EAMK,UAAA,GAAG,EAAG;AACP,wBAAA,OAAO,CAAC,GAAR,CAAY,GAAZ;AACD,uBARH;AASD,qBAVM,C;;;;;;;;;AAYR,SA3FH,CA6FE;;AA7FF;AAAA;AAAA,mCA8Fa,EA9Fb,EA8FiB,IA9FjB,EA8FqB;AACjB,eAAK,WAAL,CAAiB,OAAjB,GACE,KAAK,WAAL,CAAiB,OAAjB,CAAyB,GAAzB,CAA6B,eAA7B,EAA8C,KAAK,KAAnD,CADF;AAEA,iBAAO,KAAK,IAAL,CACJ,GADI,CACK,KAAK,GAAL,GAAW,GAAX,GAAiB,EADtB,EAC0B,IAAI,CAAC,SAAL,CAAe,IAAf,CAD1B,EACgD,KAAK,WADrD,EAEJ,IAFI,CAGH,MAAA,CAAA,2CAAA,CAAA,OAAA,CAAA,CAAA,CAAM,CAAN,CAHG,EAIH,MAAA,CAAA,2CAAA,CAAA,YAAA,CAAA,CAAA,CAAW,KAAK,WAAhB,CAJG,CAAP;AAMD;AAvGH;;AAAA;AAAA,OAAA;;;;cAUkB,iDAAA,CAAA,YAAA;;cACI,2CAAA,CAAA,iBAAA;;cACE,2CAAA,CAAA,mBAAA;;cACF,2CAAA,CAAA,iBAAA;;;;AAbT,IAAA,aAAa,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CALzB,MAAA,CAAA,0CAAA,CAAA,YAAA,CAAA,CAAA,CAAW;AACV,MAAA,UAAU,EAAE;AADF,KAAX,CAKyB,E,uEAUR,iDAAA,CAAA,YAAA,C,EACI,2CAAA,CAAA,iBAAA,C,EACE,2CAAA,CAAA,mBAAA,C,EACF,2CAAA,CAAA,iBAAA,C,EAbI,CAAA,EAAb,aAAa,CAAb","sourcesContent":["const attachComponent = async (delegate, container, component, cssClasses, componentProps) => {\n    if (delegate) {\n        return delegate.attachViewToDom(container, component, componentProps, cssClasses);\n    }\n    if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\n        throw new Error('framework delegate is missing');\n    }\n    const el = (typeof component === 'string')\n        ? container.ownerDocument && container.ownerDocument.createElement(component)\n        : component;\n    if (cssClasses) {\n        cssClasses.forEach(c => el.classList.add(c));\n    }\n    if (componentProps) {\n        Object.assign(el, componentProps);\n    }\n    container.appendChild(el);\n    if (el.componentOnReady) {\n        await el.componentOnReady();\n    }\n    return el;\n};\nconst detachComponent = (delegate, element) => {\n    if (element) {\n        if (delegate) {\n            const container = element.parentElement;\n            return delegate.removeViewFromDom(container, element);\n        }\n        element.remove();\n    }\n    return Promise.resolve();\n};\n\nexport { attachComponent as a, detachComponent as d };\n","const HapticEngine = {\n    getEngine() {\n        const win = window;\n        return (win.TapticEngine) || (win.Capacitor && win.Capacitor.isPluginAvailable('Haptics') && win.Capacitor.Plugins.Haptics);\n    },\n    available() {\n        return !!this.getEngine();\n    },\n    isCordova() {\n        return !!window.TapticEngine;\n    },\n    isCapacitor() {\n        const win = window;\n        return !!win.Capacitor;\n    },\n    impact(options) {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n        engine.impact({ style });\n    },\n    notification(options) {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n        engine.notification({ style });\n    },\n    selection() {\n        this.impact({ style: 'light' });\n    },\n    selectionStart() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionStart();\n        }\n        else {\n            engine.gestureSelectionStart();\n        }\n    },\n    selectionChanged() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionChanged();\n        }\n        else {\n            engine.gestureSelectionChanged();\n        }\n    },\n    selectionEnd() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionChanged();\n        }\n        else {\n            engine.gestureSelectionChanged();\n        }\n    }\n};\n/**\n * Trigger a selection changed haptic event. Good for one-time events\n * (not for gestures)\n */\nconst hapticSelection = () => {\n    HapticEngine.selection();\n};\n/**\n * Tell the haptic engine that a gesture for a selection change is starting.\n */\nconst hapticSelectionStart = () => {\n    HapticEngine.selectionStart();\n};\n/**\n * Tell the haptic engine that a selection changed during a gesture.\n */\nconst hapticSelectionChanged = () => {\n    HapticEngine.selectionChanged();\n};\n/**\n * Tell the haptic engine we are done with a gesture. This needs to be\n * called lest resources are not properly recycled.\n */\nconst hapticSelectionEnd = () => {\n    HapticEngine.selectionEnd();\n};\n/**\n * Use this to indicate success/failure/warning to the user.\n * options should be of the type `{ style: 'light' }` (or `medium`/`heavy`)\n */\nconst hapticImpact = (options) => {\n    HapticEngine.impact(options);\n};\n\nexport { hapticImpact as a, hapticSelectionStart as b, hapticSelectionChanged as c, hapticSelectionEnd as d, hapticSelection as h };\n","const spinners = {\n    'bubbles': {\n        dur: 1000,\n        circles: 9,\n        fn: (dur, index, total) => {\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            const angle = 2 * Math.PI * index / total;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circles': {\n        dur: 1000,\n        circles: 8,\n        fn: (dur, index, total) => {\n            const step = index / total;\n            const animationDelay = `${(dur * step) - dur}ms`;\n            const angle = 2 * Math.PI * step;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circular': {\n        dur: 1400,\n        elmDuration: true,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 20,\n                cx: 48,\n                cy: 48,\n                fill: 'none',\n                viewBox: '24 24 48 48',\n                transform: 'translate(0,0)',\n                style: {}\n            };\n        }\n    },\n    'crescent': {\n        dur: 750,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 26,\n                style: {}\n            };\n        }\n    },\n    'dots': {\n        dur: 750,\n        circles: 3,\n        fn: (_, index) => {\n            const animationDelay = -(110 * index) + 'ms';\n            return {\n                r: 6,\n                style: {\n                    'left': `${9 - (9 * index)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 17,\n                y2: 29,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines-small': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 12,\n                y2: 20,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    }\n};\nconst SPINNERS = spinners;\n\nexport { SPINNERS as S };\n","const hostContext = (selector, el) => {\n    return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color) => {\n    return (typeof color === 'string' && color.length > 0) ? {\n        'ion-color': true,\n        [`ion-color-${color}`]: true\n    } : undefined;\n};\nconst getClassList = (classes) => {\n    if (classes !== undefined) {\n        const array = Array.isArray(classes) ? classes : classes.split(' ');\n        return array\n            .filter(c => c != null)\n            .map(c => c.trim())\n            .filter(c => c !== '');\n    }\n    return [];\n};\nconst getClassMap = (classes) => {\n    const map = {};\n    getClassList(classes).forEach(c => map[c] = true);\n    return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction) => {\n    if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n        const router = document.querySelector('ion-router');\n        if (router) {\n            if (ev != null) {\n                ev.preventDefault();\n            }\n            return router.push(url, direction);\n        }\n    }\n    return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n","function e(e){this.message=e}e.prototype=new Error,e.prototype.name=\"InvalidCharacterError\";var r=\"undefined\"!=typeof window&&window.atob&&window.atob.bind(window)||function(r){var t=String(r).replace(/=+$/,\"\");if(t.length%4==1)throw new e(\"'atob' failed: The string to be decoded is not correctly encoded.\");for(var n,o,a=0,i=0,c=\"\";o=t.charAt(i++);~o&&(n=a%4?64*n+o:o,a++%4)?c+=String.fromCharCode(255&n>>(-2*a&6)):0)o=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\".indexOf(o);return c};function t(e){var t=e.replace(/-/g,\"+\").replace(/_/g,\"/\");switch(t.length%4){case 0:break;case 2:t+=\"==\";break;case 3:t+=\"=\";break;default:throw\"Illegal base64url string!\"}try{return function(e){return decodeURIComponent(r(e).replace(/(.)/g,(function(e,r){var t=r.charCodeAt(0).toString(16).toUpperCase();return t.length<2&&(t=\"0\"+t),\"%\"+t})))}(t)}catch(e){return r(t)}}function n(e){this.message=e}function o(e,r){if(\"string\"!=typeof e)throw new n(\"Invalid token specified\");var o=!0===(r=r||{}).header?0:1;try{return JSON.parse(t(e.split(\".\")[o]))}catch(e){throw new n(\"Invalid token specified: \"+e.message)}}n.prototype=new Error,n.prototype.name=\"InvalidTokenError\";export default o;export{n as InvalidTokenError};\n//# sourceMappingURL=jwt-decode.esm.js.map\n","import { AlertController, LoadingController, ModalController } from \"@ionic/angular\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\n//Comando para instalar o decode e pegar o id npm install jwt-decode\r\n\r\nexport class CurrentUser {\r\n\r\n  id: any\r\n  loading: any\r\n  public alertCtrl: AlertController\r\n  public loadingCtrl: LoadingController\r\n  public modalCtrl: ModalController\r\n\r\n  //  Método para pegar o usuário logado\r\n  getUser() {\r\n    // Inicia o alert de  loading\r\n    this.open()\r\n    try {\r\n      const jwt = localStorage.getItem('token');\r\n      let obj = jwt_decode(jwt); //Função que pega o usuário logado\r\n      this.id = JSON.stringify(obj.user_id);\r\n      return this.id\r\n      this.close()\r\n    } catch (ex) {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  async open() {\r\n    this.loading = await this.loadingCtrl.create({ message: 'Carregando ...' });\r\n    await this.loading.present();\r\n    \r\n  }\r\n\r\n\r\n  close() {\r\n    this.loading.dismiss();\r\n  }\r\n\r\n}","export class FormatDate {\r\n\r\n    // Função de formatar data e hora\r\n    format(x) {\r\n        let data = new Date(x);\r\n        let dataFormatada = ((data.getDate())) +\r\n            \"/\" + ((data.getMonth() + 1)) + \"/\" +\r\n            data.getFullYear() + \" - \" + data.getHours() +\r\n            \":\" + data.getMinutes();\r\n        return dataFormatada\r\n    }\r\n}","import { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { AlertController, LoadingController, ModalController } from '@ionic/angular';\r\nimport { Observable } from 'rxjs';\r\nimport { throwError } from 'rxjs/internal/observable/throwError';\r\nimport { catchError, map, retry } from 'rxjs/operators';\r\nimport { User } from '../models/User';\r\nimport { ConnectionUrl } from './connectionurl';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\n\r\nexport class TicketService {\r\n\r\n  //Recebe a url da classe ConnectionUrl\r\n  link: ConnectionUrl = new ConnectionUrl()\r\n\r\n  // Concatena com a rota\r\n  private url = this.link.urlconnection + 'api/v1/tickets';\r\n  tickets: any\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    public alertCtrl: AlertController,\r\n    public loadingCtrl: LoadingController,\r\n    public modalCtrl: ModalController,\r\n  ) { }\r\n\r\n  // Do this on service. But for this demo lets do here\r\n  token: any = localStorage.getItem('token');\r\n  headers: any = new HttpHeaders({\r\n    Authorization: 'Bearer ' + this.token\r\n  });\r\n\r\n  // Handle API errors\r\n  handleError(error: HttpErrorResponse) {\r\n    if (error.error instanceof ErrorEvent) {\r\n      // A client-side or network error occurred. Handle it accordingly.\r\n      console.error('An error occurred:', error.error.message);\r\n    } else {\r\n      // The backend returned an unsuccessful response code.\r\n      // The response body may contain clues as to what went wrong,\r\n      console.error(\r\n        `Backend returned code ${error.status}, ` +\r\n        `body was: ${error.error}`);\r\n    }\r\n    // return an observable with a user-facing error message\r\n    return throwError(\r\n      'Something bad happened; please try again later.');\r\n  };\r\n\r\n\r\n  // Http Options\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n    })\r\n  }\r\n\r\n  // Pega a lista de todos os tickets\r\n  async getTicketList() {\r\n    // Inicia o alert de  loading\r\n    const loading = await this.loadingCtrl.create({ message: 'Carregando ...' });\r\n    await loading.present();\r\n    return new Promise(resolve => {\r\n      this.http.get(this.url,\r\n        { headers: this.headers }).subscribe(data => {\r\n          resolve(data);\r\n          //  Encerra o carregamento do loading\r\n          loading.dismiss();\r\n          // return data;\r\n        }, err => {\r\n          console.log(err);\r\n        });\r\n    });\r\n\r\n  }\r\n\r\n\r\n  //Método que cria um ticket\r\n  create(t: any) {\r\n    this.httpOptions.headers =\r\n      this.httpOptions.headers.set('Authorization', this.token);\r\n    return this.http.post(`${this.url}`, t, this.httpOptions);\r\n  }\r\n\r\n  // Busca um ticket pelo id\r\n  async getItemTicket(id) {\r\n    // Inicia o alert de  loading\r\n    const loading = await this.loadingCtrl.create({ message: 'Carregando ...' });\r\n    await loading.present();\r\n    return new Promise(resolve => {\r\n      this.http.get(this.url + '/' + id,\r\n        { headers: this.headers }).subscribe(data => {\r\n          resolve(data);\r\n          this.tickets = data;\r\n          //  Encerra o carregamento do loading\r\n          loading.dismiss();\r\n        }, err => {\r\n          console.log(err);\r\n        });\r\n    });\r\n\r\n  }\r\n\r\n  // Método de atualizar Ticket\r\n  updateItem(id, item): Observable<any> {\r\n    this.httpOptions.headers =\r\n      this.httpOptions.headers.set('Authorization', this.token);\r\n    return this.http\r\n      .put<any>(this.url + '/' + id, JSON.stringify(item), this.httpOptions)\r\n      .pipe(\r\n        retry(2),\r\n        catchError(this.handleError)\r\n      )\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n"],"sourceRoot":"webpack:///","file":"common-es5.js"}