{"version":3,"sources":["src/app/pages/ticket-detail/ticket-detail.page.html","src/app/auth/comment.service.ts","src/app/pages/ticket-detail/ticket-detail-routing.module.ts","src/app/pages/ticket-detail/ticket-detail.module.ts","src/app/pages/ticket-detail/ticket-detail.page.scss","src/app/pages/ticket-detail/ticket-detail.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,klGAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACaf,QAAa,cAAb;AAAA;AAAA;AAQA;AAEE,8BAAoB,IAApB,EAAoC;AAAA;;AAAhB,aAAA,IAAA,GAAA,IAAA,CAAgB,CARnC;;AACA,aAAA,IAAA,GAAsB,IAAI,2CAAA,CAAA,eAAA,CAAJ,EAAtB,CAOmC,CAJpC;;AACQ,aAAA,GAAA,GAAM,KAAK,IAAL,CAAU,aAAV,GAA0B,iBAAhC,CAG4B,CAEpC;;AACA,aAAA,KAAA,GAAa,YAAY,CAAC,OAAb,CAAqB,OAArB,CAAb;AACA,aAAA,OAAA,GAAe,IAAI,iDAAA,CAAA,aAAA,CAAJ,CAAgB;AAC7B,UAAA,aAAa,EAAE,YAAY,KAAK;AADH,SAAhB,CAAf,CAJoC,CA0BpC;;AACA,aAAA,WAAA,GAAc;AACZ,UAAA,OAAO,EAAE,IAAI,iDAAA,CAAA,aAAA,CAAJ,CAAgB;AACvB,4BAAgB;AADO,WAAhB;AADG,SAAd;AA3ByC,OAV3C,CAkBE;;;AAlBF;AAAA;AAAA,oCAmBc,KAnBd,EAmBsC;AAClC,cAAI,KAAK,CAAC,KAAN,YAAuB,UAA3B,EAAuC;AACrC;AACA,YAAA,OAAO,CAAC,KAAR,CAAc,oBAAd,EAAoC,KAAK,CAAC,KAAN,CAAY,OAAhD;AACD,WAHD,MAGO;AACL;AACA;AACA,YAAA,OAAO,CAAC,KAAR,CACE,gCAAyB,KAAK,CAAC,MAA/B,8BACa,KAAK,CAAC,KADnB,CADF;AAGD,WAViC,CAWlC;;;AACA,iBAAO,MAAA,CAAA,gEAAA,CAAA,YAAA,CAAA,CAAA,CACL,iDADK,CAAP;AAED;AAjCH;AAAA;AA2CE;AA3CF,0CA4CiB;AAAA;;AACb,iBAAO,IAAI,OAAJ,CAAY,UAAA,OAAO,EAAG;AAC3B,YAAA,KAAI,CAAC,IAAL,CAAU,GAAV,CAAc,KAAI,CAAC,GAAnB,EACE;AAAE,cAAA,OAAO,EAAE,KAAI,CAAC;AAAhB,aADF,EAC6B,SAD7B,CACuC,UAAA,IAAI,EAAG;AAC1C,cAAA,OAAO,CAAC,IAAD,CAAP,CAD0C,CAE1C;AACD,aAJH,EAIK,UAAA,GAAG,EAAG;AACP,cAAA,OAAO,CAAC,GAAR,CAAY,GAAZ;AACD,aANH;AAOD,WARM,CAAP;AAUD,SAvDH,CA0DE;;AA1DF;AAAA;AAAA,+BA2DS,GA3DT,EA2DiB;AACb,eAAK,WAAL,CAAiB,OAAjB,GACE,KAAK,WAAL,CAAiB,OAAjB,CAAyB,GAAzB,CAA6B,eAA7B,EAA8C,KAAK,KAAnD,CADF;AAEA,iBAAO,KAAK,IAAL,CAAU,IAAV,WAAkB,KAAK,GAAvB,GAA8B,GAA9B,EAAmC,KAAK,WAAxC,CAAP;AACD,SA/DH,CAiEE;;AAjEF;AAAA;AAAA,uCAkEiB,EAlEjB,EAkEmB;AAAA;;AACf,iBAAO,IAAI,OAAJ,CAAY,UAAA,OAAO,EAAG;AAC3B,YAAA,MAAI,CAAC,IAAL,CAAU,GAAV,CAAc,MAAI,CAAC,GAAL,GAAW,GAAX,GAAiB,EAA/B,EACE;AAAE,cAAA,OAAO,EAAE,MAAI,CAAC;AAAhB,aADF,EAC6B,SAD7B,CACuC,UAAA,IAAI,EAAG;AAC1C,cAAA,OAAO,CAAC,IAAD,CAAP;AACA,cAAA,MAAI,CAAC,QAAL,GAAgB,IAAhB;AACD,aAJH,EAIK,UAAA,GAAG,EAAG;AACP,cAAA,OAAO,CAAC,GAAR,CAAY,GAAZ;AACD,aANH;AAOD,WARM,CAAP;AAUD;AA7EH;;AAAA;AAAA,OAAA;;;;cAU4B,iDAAA,CAAA,YAAA;;;;AAVf,IAAA,cAAc,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAL1B,MAAA,CAAA,0CAAA,CAAA,YAAA,CAAA,CAAA,CAAW;AACV,MAAA,UAAU,EAAE;AADF,KAAX,CAK0B,E,uEAUC,iDAAA,CAAA,YAAA,C,EAVD,CAAA,EAAd,cAAc,CAAd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRb,QAAM,MAAM,GAAW,CACrB;AACE,MAAA,IAAI,EAAE,EADR;AAEE,MAAA,SAAS,EAAE,gDAAA,CAAA,kBAAA;AAFb,KADqB,CAAvB;;AAWA,QAAa,6BAAb;AAAA;AAAA,KAAA;;AAAa,IAAA,6BAA6B,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAJzC,MAAA,CAAA,0CAAA,CAAA,UAAA,CAAA,CAAA,CAAS;AACR,MAAA,OAAO,EAAE,CAAC,4CAAA,CAAA,cAAA,CAAA,CAAa,QAAb,CAAsB,MAAtB,CAAD,CADD;AAER,MAAA,OAAO,EAAE,CAAC,4CAAA,CAAA,cAAA,CAAD;AAFD,KAAT,CAIyC,CAAA,EAA7B,6BAA6B,CAA7B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACGb,QAAa,sBAAb;AAAA;AAAA,KAAA;;AAAa,IAAA,sBAAsB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CATlC,MAAA,CAAA,0CAAA,CAAA,UAAA,CAAA,CAAA,CAAS;AACR,MAAA,OAAO,EAAE,CACP,4CAAA,CAAA,cAAA,CADO,EAEP,2CAAA,CAAA,aAAA,CAFO,EAGP,2CAAA,CAAA,aAAA,CAHO,EAIP,0DAAA,CAAA,+BAAA,CAJO,CADD;AAOR,MAAA,YAAY,EAAE,CAAC,gDAAA,CAAA,kBAAA,CAAD;AAPN,KAAT,CASkC,CAAA,EAAtB,sBAAsB,CAAtB;;;;;;;;;;;;;;;;ACnBb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,4lEAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACgBf,QAAa,gBAAb;AAAA;AAAA;AAmBE,gCAES,aAFT,EAGU,KAHV,EAIS,WAJT,EAKS,cALT,EAKuC;AAAA;;AAH9B,aAAA,aAAA,GAAA,aAAA;AACC,aAAA,KAAA,GAAA,KAAA;AACD,aAAA,WAAA,GAAA,WAAA;AACA,aAAA,cAAA,GAAA,cAAA;AAnBT,aAAA,WAAA,GAAmB;AAAE,UAAA,EAAE,EAAE,EAAN;AAAU,UAAA,KAAK,EAAE,EAAjB;AAAqB,UAAA,IAAI,EAAE,EAA3B;AAA+B,UAAA,UAAU,EAAE,EAA3C;AAA+C,UAAA,KAAK,EAAE,EAAtD;AAA0D,UAAA,KAAK,EAAE,EAAjE;AAAqE,UAAA,IAAI,EAAE;AAA3E,SAAnB;AACA,aAAA,IAAA,GAAY;AAAE,UAAA,IAAI,EAAE,EAAR;AAAY,UAAA,SAAS,EAAE;AAAvB,SAAZ;AAEA,aAAA,UAAA,GAAyB,IAAI,6CAAA,CAAA,YAAA,CAAJ,EAAzB;AACA,aAAA,IAAA,GAAsB,IAAI,gDAAA,CAAA,eAAA,CAAJ,EAAtB;AACA,aAAA,QAAA,GAAmB,EAAnB;AACA,aAAA,GAAA,GAAc,EAAd;AACA,aAAA,OAAA,GAAuB,IAAI,8CAAA,CAAA,aAAA,CAAJ,EAAvB;AAIA,aAAA,QAAA,GAAW,IAAI,KAAJ,EAAX;AAUK;;AA1BP;AAAA;AAAA,mCA4BU;AACN,eAAK,iBAAL;AACD,SA9BH,CAgCE;;AAhCF;AAAA;AAAA,4CAiCmB;AAAA;;AACf;AACA,eAAK,QAAL,GAAgB,QAAQ,CAAC,KAAK,KAAL,CAAW,QAAX,CAAoB,QAApB,CAA6B,GAA7B,CAAiC,IAAjC,CAAD,CAAxB,CAFe,CAGf;;AACA,eAAK,EAAL,GAAU,KAAK,OAAL,CAAa,OAAb,EAAV,CAJe,CAKf;;AACA,eAAK,aAAL,CAAmB,aAAnB,CAAiC,KAAK,QAAtC,EAAgD,IAAhD,CAAqD,UAAA,QAAQ,EAAG;AAC9D,YAAA,MAAI,CAAC,MAAL,GAAc,QAAd,CAD8D,CAE9D;;AACA,YAAA,MAAI,CAAC,WAAL,CAAiB,OAAjB,CAAyB,MAAI,CAAC,MAAL,CAAY,OAArC,EAA8C,IAA9C,CAAmD,UAAA,QAAQ,EAAG;AAC5D,cAAA,MAAI,CAAC,IAAL,GAAY,QAAZ,CAD4D,CAG5D;;AACA,cAAA,MAAI,CAAC,WAAL,GAAmB;AACjB,gBAAA,KAAK,EAAE,MAAI,CAAC,IAAL,CAAU,aAAV,GAA0B,MAAI,CAAC,IAAL,CAAU,KAAV,CAAgB,GADhC;AAEjB,gBAAA,IAAI,EAAE,MAAI,CAAC,IAAL,CAAU,IAFC;AAGjB,gBAAA,EAAE,EAAE,MAAI,CAAC,MAAL,CAAY,EAHC;AAIjB,gBAAA,KAAK,EAAE,MAAI,CAAC,MAAL,CAAY,KAJF;AAKjB,gBAAA,IAAI,EAAE,MAAI,CAAC,MAAL,CAAY,IALD;AAMjB,gBAAA,IAAI,EAAE,MAAI,CAAC,UAAL,CAAgB,MAAhB,CAAuB,MAAI,CAAC,MAAL,CAAY,UAAnC,CANW;AAOjB,gBAAA,KAAK,EAAE,MAAI,CAAC,IAAL,CAAU,aAAV,GAA0B,MAAM,CAAC,MAAP,CAAc,MAAI,CAAC,MAAL,CAAY,KAA1B,EAAiC,CAAjC;AAPhB,eAAnB;AAUD,aAdD;AAgBD,WAnBD;AAqBD;AA5DH;AAAA;AAAA,2CA8DwB;;;;;;;;;;AACnB;AACA,yBAAK,QAAL,GAAgB,IAAI,KAAJ,EAAhB,C,CACA;;AACA,yBAAK,cAAL,CAAoB,eAApB,GAAsC,IAAtC,CAA2C,UAAA,QAAQ,EAAG;AACpD,sBAAA,MAAI,CAAC,WAAL,GAAmB,QAAnB,CADoD,CAEpD;;AAFoD,iDAG3C,CAH2C;AAIlD,wBAAA,MAAI,CAAC,WAAL,CAAiB,OAAjB,CAAyB,MAAI,CAAC,WAAL,CAAiB,CAAjB,EAAoB,OAA7C,EAAsD,IAAtD,CAA2D,UAAA,QAAQ,EAAG;AACpE,0BAAA,MAAI,CAAC,KAAL,GAAa,QAAb,CADoE,CAEpE;;AACA,8BAAI,MAAI,CAAC,QAAL,IAAiB,MAAM,CAAC,MAAP,CAAc,MAAI,CAAC,WAAL,CAAiB,CAAjB,CAAd,EAAmC,CAAnC,CAArB,EAA4D;AAC1D;AACA;AACA,4BAAA,MAAI,CAAC,WAAL,GAAmB;AACjB,8BAAA,KAAK,EAAE,MAAI,CAAC,IAAL,CAAU,aAAV,GAA0B,MAAI,CAAC,KAAL,CAAW,KAAX,CAAiB,GADjC;AAEjB,8BAAA,IAAI,EAAE,MAAI,CAAC,KAAL,CAAW,IAFA;AAGjB,8BAAA,KAAK,EAAE,MAAI,CAAC,WAAL,CAAiB,CAAjB,EAAoB,KAApB,CAA0B,GAHhB;AAIjB,8BAAA,IAAI,EAAE,MAAI,CAAC,WAAL,CAAiB,CAAjB,EAAoB,IAJT;AAKjB,8BAAA,IAAI,EAAE,MAAI,CAAC,UAAL,CAAgB,MAAhB,CAAuB,MAAI,CAAC,WAAL,CAAiB,CAAjB,EAAoB,UAA3C;AALW,6BAAnB,CAH0D,CAU1D;;AACA,4BAAA,MAAI,CAAC,QAAL,CAAc,IAAd,CAAmB,MAAI,CAAC,WAAxB;AACD;AACF,yBAhBD;AAJkD;;AAGpD,2BAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,MAAI,CAAC,WAAL,CAAiB,MAArC,EAA6C,CAAC,EAA9C,EAAkD;AAAA,8BAAzC,CAAyC;AAkBjD;AAEF,qBAvBD;AAwBA,oBAAA,OAAO,CAAC,GAAR,CAAY,KAAK,QAAjB;;;;;;;;;AACF,SA3FH,CA8FE;;AA9FF;AAAA;AAAA,0CA+FoB,CA/FpB,EA+FqB;AACjB,cAAI,IAAI,GAAG,CAAC,CAAC,YAAF,GAAiB,CAAC,CAAC,YAAF,CAAe,KAAf,CAAqB,CAArB,CAAjB,GAA2C,CAAC,CAAC,MAAF,CAAS,KAAT,CAAe,CAAf,CAAtD;AACA,cAAI,OAAO,GAAG,SAAd;AACA,cAAI,MAAM,GAAG,IAAI,UAAJ,EAAb;;AACA,cAAI,CAAC,IAAI,CAAC,IAAL,CAAU,KAAV,CAAgB,OAAhB,CAAL,EAA+B;AAC7B,YAAA,KAAK,CAAC,kBAAD,CAAL;AACA;AACD;;AACD,UAAA,MAAM,CAAC,MAAP,GAAgB,KAAK,mBAAL,CAAyB,IAAzB,CAA8B,IAA9B,CAAhB;AACA,UAAA,MAAM,CAAC,aAAP,CAAqB,IAArB;AACD;AAzGH;AAAA;AAAA,4CA0GsB,CA1GtB,EA0GuB;AACnB,cAAI,MAAM,GAAG,CAAC,CAAC,MAAf;AACA,eAAK,QAAL,GAAgB,MAAM,CAAC,MAAvB;AACA,eAAK,GAAL,GAAW,KAAK,QAAhB;AACD,SA9GH,CAiHE;;AAjHF;AAAA;AAAA,wCAkHe;AAAA;;AACX;AACA,eAAK,OAAL,GAAe;AACb,YAAA,OAAO,EAAE;AACP,cAAA,SAAS,EAAE,KAAK,MAAL,CAAY,EADhB;AAEP,cAAA,IAAI,EAAE,KAAK,IAAL,CAAU,IAFT;AAGP,cAAA,KAAK,EAAE,KAAK,GAHL;AAIP,cAAA,OAAO,EAAE,KAAK;AAJP;AADI,WAAf,CAFW,CAUX;;AACA,eAAK,cAAL,CAAoB,MAApB,CAA2B,KAAK,OAAhC,EAAyC,SAAzC,CACE;AAAA,mBAAY,kCAAA,CAAA,WAAA,CAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA;AAAA;AAAA,oCAAA;AAAA;AAAA;AAAA;AAAA;AACV,2BAAK,gBAAL,GADU,CAEV;;AAFU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAA,EAAZ;AAAA,WADF;AAOA,eAAK,IAAL,GAAY;AAAE,YAAA,IAAI,EAAE,EAAR;AAAY,YAAA,SAAS,EAAE;AAAvB,WAAZ,CAlBW,CAmBX;AACD,SAtIH,CAwIE;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AArJF;AAAA;AAAA,kCAuJS;AAAA;;AACL,eAAK,MAAL,CAAY,QAAZ,GAAuB,IAAvB,CADK,CAEL;;AACC,eAAK,aAAL,CAAmB,UAAnB,CAA8B,KAAK,QAAnC,EAA6C,KAAK,MAAlD,EAA2D,SAA3D,CAAqE,UAAA,QAAQ,EAAG;AAC/E,YAAA,OAAO,CAAC,GAAR,CAAY,MAAI,CAAC,MAAjB;AACA,YAAA,KAAK,CAAC,QAAD,CAAL;AACD,WAHA;AAIF;AA9JH;AAAA;AAAA,qCAgKY;AAAA;;AACR,eAAK,MAAL,CAAY,QAAZ,GAAuB,KAAvB,CADQ,CAER;;AACA,eAAK,aAAL,CAAmB,UAAnB,CAA8B,KAAK,QAAnC,EAA6C,KAAK,MAAlD,EAA2D,SAA3D,CAAqE,UAAA,QAAQ,EAAG;AAC/E,YAAA,OAAO,CAAC,GAAR,CAAY,MAAI,CAAC,MAAjB;AACA,YAAA,KAAK,CAAC,YAAD,CAAL;AACD,WAHA;AAID;AAvKH;;AAAA;AAAA,OAAA;;;;cAqB0B,iDAAA,CAAA,eAAA;;cACP,4CAAA,CAAA,gBAAA;;cACK,+CAAA,CAAA,aAAA;;cACG,kDAAA,CAAA,gBAAA;;;;AAxBd,IAAA,gBAAgB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAL5B,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,mBADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,mGAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAK4B,E,uEAqBH,iDAAA,CAAA,eAAA,C,EACP,4CAAA,CAAA,gBAAA,C,EACK,+CAAA,CAAA,aAAA,C,EACG,kDAAA,CAAA,gBAAA,C,EAxBE,CAAA,EAAhB,gBAAgB,CAAhB","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>Ticket Detalhe</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<!-- Inicio do Card -->\\r\\n<ion-content fullscreen=\\\"true\\\"> \\r\\n  <ion-card>\\r\\n    <ion-item>\\r\\n      <ion-avatar slot=\\\"start\\\">\\r\\n        <img [src]=\\\"ticketCards.photo\\\">\\r\\n      </ion-avatar>\\r\\n      <ion-label>\\r\\n        <h3>{{ticketCards.name}}</h3>\\r\\n        <p>{{ticketCards.date}}</p>\\r\\n      </ion-label>\\r\\n    </ion-item>  \\r\\n    <img [src]=\\\"ticketCards.image\\\" alt=\\\"ion\\\">\\r\\n    <ion-card-header>\\r\\n      <p>TICKET ID - {{ticketCards.id}}</p>\\r\\n      <ion-card-title>{{ticketCards.title}}</ion-card-title>\\r\\n    </ion-card-header>\\r\\n    <ion-card-content>\\r\\n      {{ticketCards.text}}\\r\\n    </ion-card-content>\\r\\n    <!-- BotÃµes do card -->\\r\\n    <ion-footer>\\r\\n      <ion-row>\\r\\n        <ion-col center text-center>\\r\\n          <button (click)=\\\"approve()\\\">\\r\\n            <ion-icon class=\\\"icon\\\" name=\\\"thumbs-up\\\"></ion-icon>\\r\\n            <div>Aprovado</div>\\r\\n          </button>\\r\\n        </ion-col>\\r\\n        <ion-col center text-center>\\r\\n          <button (click)= \\\"disapprove()\\\">\\r\\n            <ion-icon class=\\\"icon\\\" name=\\\"thumbs-down\\\"></ion-icon>\\r\\n            <div>Desaprovado</div>\\r\\n          </button>\\r\\n        </ion-col>\\r\\n        <ion-col center text-center>\\r\\n          <!-- <button (click)=\\\"hideComment('commntDiv')\\\"> -->\\r\\n          <button>\\r\\n            <ion-icon class=\\\"icon\\\" name=\\\"chatbubbles\\\"></ion-icon>\\r\\n            <div>{{comments.length}} ComentÃ¡rios</div>\\r\\n          </button>\\r\\n        </ion-col>       \\r\\n      </ion-row>\\r\\n    </ion-footer>\\r\\n  </ion-card>\\r\\n<!-- Fim do card -->\\r\\n\\r\\n<!-- InÃ­cio dos inputs de comentÃ¡rio e BotÃµes de envio -->\\r\\n  <ion-item >\\r\\n    <ion-input placeholder=\\\"Digite seu comentÃ¡rio\\\"  [(ngModel)]=\\\"data.text\\\" name=\\\"text\\\" ></ion-input>\\r\\n    <div class=\\\"input--file\\\" >\\r\\n      <span>\\r\\n        <ion-icon class=\\\"icon\\\" name=\\\"camera\\\"></ion-icon>\\r\\n      </span>\\r\\n      <input (change)=\\\"handleInputChange($event)\\\" name=\\\"imageUrl\\\" type=\\\"file\\\" />\\r\\n    </div>\\r\\n\\r\\n    <button  (click)=\\\"createComment()\\\">\\r\\n      <ion-icon class=\\\"icon\\\" name=\\\"send\\\"></ion-icon>\\r\\n    </button>    \\r\\n  </ion-item>\\r\\n  <!-- Fim inputs de comentÃ¡rio e BotÃµes de envio -->\\r\\n  \\r\\n  <!-- Card de ComentÃ¡rios -->\\r\\n  <div id=\\\"commntDiv\\\">\\r\\n    <ion-card  *ngFor=\\\"let comment of comments\\\">\\r\\n      <ion-item >\\r\\n        <ion-avatar slot=\\\"start\\\">\\r\\n          <img [src]=\\\"comment.photo\\\">\\r\\n        </ion-avatar>\\r\\n        <ion-label>\\r\\n          <h3>{{comment.name}}</h3>\\r\\n          <p>{{comment.date}}</p>\\r\\n        </ion-label>\\r\\n      </ion-item> \\r\\n      <div *ngIf=\\\"comment.image != null\\\">\\r\\n        <img [src]= \\\"link.urlconnection + comment.image\\\" alt=\\\"ion\\\">\\r\\n     </div>\\r\\n      <ion-card-content>\\r\\n        <h3 style=\\\"color: black;\\\">{{comment.text}}</h3>\\r\\n      </ion-card-content>    \\r\\n    </ion-card>\\r\\n  </div>\\r\\n</ion-content>\\r\\n\"","import { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { throwError } from 'rxjs/internal/observable/throwError';\r\nimport { catchError, map, retry } from 'rxjs/operators';\r\nimport { User } from '../models/User';\r\nimport { ConnectionUrl } from './connectionurl';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\n\r\nexport class CommentService {\r\n\r\n   //Recebe a url da classe ConnectionUrl\r\n   link: ConnectionUrl = new ConnectionUrl()\r\n   comments:any\r\n\r\n  //Concatena com a rota\r\n  private url = this.link.urlconnection + 'api/v1/comments';\r\n//   tickets: any\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  // Do this on service. But for this demo lets do here\r\n  token: any = localStorage.getItem('token');\r\n  headers: any = new HttpHeaders({\r\n    Authorization: 'Bearer ' + this.token\r\n  });\r\n\r\n  // Handle API errors\r\n  handleError(error: HttpErrorResponse) {\r\n    if (error.error instanceof ErrorEvent) {\r\n      // A client-side or network error occurred. Handle it accordingly.\r\n      console.error('An error occurred:', error.error.message);\r\n    } else {\r\n      // The backend returned an unsuccessful response code.\r\n      // The response body may contain clues as to what went wrong,\r\n      console.error(\r\n        `Backend returned code ${error.status}, ` +\r\n        `body was: ${error.error}`);\r\n    }\r\n    // return an observable with a user-facing error message\r\n    return throwError(\r\n      'Something bad happened; please try again later.');\r\n  };\r\n\r\n\r\n  // Http Options\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n    })\r\n  }\r\n\r\n  // Pega a lista de todos os comentÃ¡rios\r\n  getCommentsList() {\r\n    return new Promise(resolve => {\r\n      this.http.get(this.url,\r\n        { headers: this.headers }).subscribe(data => {\r\n          resolve(data);\r\n          // return data;\r\n        }, err => {\r\n          console.log(err);\r\n        });\r\n    });\r\n\r\n  }\r\n\r\n\r\n  //MÃ©todo que cria um comentÃ¡rio\r\n  create(cmt: any) {\r\n    this.httpOptions.headers =\r\n      this.httpOptions.headers.set('Authorization', this.token);\r\n    return this.http.post(`${this.url}`, cmt, this.httpOptions);\r\n  }\r\n\r\n  // Busca um ticket pelo id\r\n  getCommentItem(id) {\r\n    return new Promise(resolve => {\r\n      this.http.get(this.url + '/' + id,\r\n        { headers: this.headers }).subscribe(data => {\r\n          resolve(data);\r\n          this.comments = data;\r\n        }, err => {\r\n          console.log(err);\r\n        });\r\n    });\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { TicketDetailPage } from './ticket-detail.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: TicketDetailPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class TicketDetailPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { TicketDetailPageRoutingModule } from './ticket-detail-routing.module';\r\n\r\nimport { TicketDetailPage } from './ticket-detail.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    TicketDetailPageRoutingModule\r\n  ],\r\n  declarations: [TicketDetailPage]\r\n})\r\nexport class TicketDetailPageModule {}\r\n","export default \"button {\\n  background-color: transparent;\\n}\\n\\n.icon {\\n  color: #919191;\\n  font-size: 20px;\\n}\\n\\nbutton:focus {\\n  box-shadow: 0 0 0 0;\\n  border: 0 none;\\n  outline: 0;\\n}\\n\\n.input--file {\\n  position: relative;\\n  color: #7f7f7f;\\n}\\n\\n.input--file input[type=file] {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  opacity: 0;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvdGlja2V0LWRldGFpbC9DOlxcVXNlcnNcXGxlYW5kXFxPbmVEcml2ZVxcRG9jdW1lbnRvc1xcRGV2ZWxvcG1lbnRcXGFwbGljYXRpdm8tdGhlLXN1cG9ydGUvc3JjXFxhcHBcXHBhZ2VzXFx0aWNrZXQtZGV0YWlsXFx0aWNrZXQtZGV0YWlsLnBhZ2Uuc2NzcyIsInNyYy9hcHAvcGFnZXMvdGlja2V0LWRldGFpbC90aWNrZXQtZGV0YWlsLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLDZCQUFBO0FDQ0o7O0FERUE7RUFDSSxjQUFBO0VBQ0EsZUFBQTtBQ0NKOztBREVBO0VBQ0ksbUJBQUE7RUFDQSxjQUFBO0VBQ0EsVUFBQTtBQ0NKOztBREdBO0VBQ0ksa0JBQUE7RUFDQSxjQUFBO0FDQUo7O0FER0U7RUFDRSxrQkFBQTtFQUNBLE1BQUE7RUFDQSxPQUFBO0VBQ0EsVUFBQTtBQ0FKIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvdGlja2V0LWRldGFpbC90aWNrZXQtZGV0YWlsLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImJ1dHRvbiB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxufVxyXG5cclxuLmljb257XHJcbiAgICBjb2xvcjojOTE5MTkxO1xyXG4gICAgZm9udC1zaXplOiAyMHB4O1xyXG59XHJcblxyXG5idXR0b246Zm9jdXMgeyAgICBcclxuICAgIGJveC1zaGFkb3c6IDAgMCAwIDA7XHJcbiAgICBib3JkZXI6IDAgbm9uZTtcclxuICAgIG91dGxpbmU6IDA7XHJcbn0gXHJcblxyXG5cclxuLmlucHV0LS1maWxlIHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIGNvbG9yOiAjN2Y3ZjdmO1xyXG4gIH1cclxuICBcclxuICAuaW5wdXQtLWZpbGUgaW5wdXRbdHlwZT1cImZpbGVcIl0ge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgbGVmdDogMDtcclxuICAgIG9wYWNpdHk6IDA7XHJcbiAgfVxyXG4gICIsImJ1dHRvbiB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xufVxuXG4uaWNvbiB7XG4gIGNvbG9yOiAjOTE5MTkxO1xuICBmb250LXNpemU6IDIwcHg7XG59XG5cbmJ1dHRvbjpmb2N1cyB7XG4gIGJveC1zaGFkb3c6IDAgMCAwIDA7XG4gIGJvcmRlcjogMCBub25lO1xuICBvdXRsaW5lOiAwO1xufVxuXG4uaW5wdXQtLWZpbGUge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGNvbG9yOiAjN2Y3ZjdmO1xufVxuXG4uaW5wdXQtLWZpbGUgaW5wdXRbdHlwZT1maWxlXSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICBvcGFjaXR5OiAwO1xufSJdfQ== */\"","import { tick } from '@angular/core/testing';\r\nimport { CurrentUser } from './../../auth/currentuser';\r\nimport { FormatDate } from './../../auth/formatdate';\r\nimport { AuthService } from './../../auth/auth.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { TicketService } from '../../auth/ticket.service';\r\nimport { CommentService } from '../../auth/comment.service';\r\nimport { ConnectionUrl } from '../../auth/connectionurl';\r\n\r\n\r\n@Component({\r\n  selector: 'app-ticket-detail',\r\n  templateUrl: './ticket-detail.page.html',\r\n  styleUrls: ['./ticket-detail.page.scss'],\r\n})\r\nexport class TicketDetailPage implements OnInit {\r\n\r\n  ticketId: number\r\n  ticket: any\r\n  user: any\r\n  ticketCards: any = { id: '', title: '', name: '', created_at: '', photo: '', image: '', text: '' }\r\n  data: any = { text: '', ticket_id: '' }\r\n  comment: any\r\n  formatDate: FormatDate = new FormatDate()\r\n  link: ConnectionUrl = new ConnectionUrl()\r\n  imageSrc: string = ''\r\n  img: string = ''\r\n  current: CurrentUser = new CurrentUser()\r\n  id: number\r\n  commentdata: any\r\n  users: any\r\n  comments = new Array<any>()\r\n  getComments: any\r\n\r\n  constructor(\r\n\r\n    public ticketService: TicketService,\r\n    private route: ActivatedRoute,\r\n    public authService: AuthService,\r\n    public commentService: CommentService\r\n\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.createCardTickets()    \r\n  }\r\n\r\n  //Cria o Ticket de cards na view\r\n  createCardTickets() {\r\n    // Recebe o id vindo da url \r\n    this.ticketId = parseInt(this.route.snapshot.paramMap.get('id'))\r\n    //Pega o id logado para cadastrar o comentÃ¡rio\r\n    this.id = this.current.getUser()\r\n    // Chama a funÃ§Ã£o da classe ticketService que retorna o ticket pelo id \r\n    this.ticketService.getItemTicket(this.ticketId).then(response => {\r\n      this.ticket = response            \r\n      // Chama a funÃ§Ã£o da classe ticketService que retorna o usuÃ¡rio pelo id \r\n      this.authService.getItem(this.ticket.user_id).then(response => {\r\n        this.user = response;\r\n\r\n        //Seta valores no objeto ticketCards do card da View \r\n        this.ticketCards = {\r\n          photo: this.link.urlconnection + this.user.photo.url,\r\n          name: this.user.name,\r\n          id: this.ticket.id,\r\n          title: this.ticket.title,\r\n          text: this.ticket.text,\r\n          date: this.formatDate.format(this.ticket.created_at),\r\n          image: this.link.urlconnection + Object.values(this.ticket.image)[0]\r\n\r\n        }\r\n      })\r\n\r\n    })\r\n\r\n  }\r\n\r\n  async ionViewWillEnter(){     \r\n     // Limpa a lista\r\n     this.comments = new Array<any>()\r\n     // Pega a lista de comentÃ¡rios da classe CommentService\r\n     this.commentService.getCommentsList().then(response => {\r\n       this.commentdata = response;\r\n       // LaÃ§o do tamanho da lista de tickets chama o metodo getItem da classe authService buscando o usuÃ¡rio pelo id \r\n       for (let i = 0; i < this.commentdata.length; i++) {\r\n         this.authService.getItem(this.commentdata[i].user_id).then(response => {\r\n           this.users = response;\r\n           //     // Compara se o usuÃ¡rio logado estÃ¡ no ticket como remetente ou destinatÃ¡rio do ticket\r\n           if (this.ticketId == Object.values(this.commentdata[i])[2]) {\r\n             // console.log(Object.values(this.commentdata[i])[5])             \r\n             // Seta valores no objeto ticket\r\n             this.getComments = {\r\n               photo: this.link.urlconnection + this.users.photo.url,\r\n               name: this.users.name,\r\n               image: this.commentdata[i].image.url,\r\n               text: this.commentdata[i].text,\r\n               date: this.formatDate.format(this.commentdata[i].created_at)\r\n             }\r\n             // Adiciona o objeto getComments no Array\r\n             this.comments.push(this.getComments)\r\n           }\r\n         })\r\n       }\r\n \r\n     })\r\n     console.log(this.comments)       \r\n  }\r\n \r\n\r\n  //MÃ©todo que pega imagem do input file e convete em base 64 e guarda na variÃ¡vel imageSrc \r\n  handleInputChange(e) {\r\n    var file = e.dataTransfer ? e.dataTransfer.files[0] : e.target.files[0];\r\n    var pattern = /image-*/;\r\n    var reader = new FileReader();\r\n    if (!file.type.match(pattern)) {\r\n      alert('Formato invÃ¡lido');\r\n      return;\r\n    }\r\n    reader.onload = this._handleReaderLoaded.bind(this);\r\n    reader.readAsDataURL(file);\r\n  }\r\n  _handleReaderLoaded(e) {\r\n    let reader = e.target;\r\n    this.imageSrc = reader.result;\r\n    this.img = this.imageSrc;\r\n  }\r\n\r\n\r\n  //Metodo para cadastrar comentÃ¡rio\r\n  createComment() {\r\n    // Cria um objeto Comment\r\n    this.comment = {\r\n      comment: {\r\n        ticket_id: this.ticket.id,\r\n        text: this.data.text,\r\n        image: this.img,\r\n        user_id: this.id\r\n      }\r\n    };\r\n    // Envia o objeto ticket para o mÃ©todo create da classe ticketService\r\n    this.commentService.create(this.comment).subscribe(\r\n      async () => {\r\n        this.ionViewWillEnter()       \r\n        // alert(\"ComentÃ¡rio salvo!!\")\r\n      },\r\n    );\r\n\r\n    this.data = { text: '', ticket_id: '' } \r\n    //fINAL\r\n  }\r\n\r\n  // Esconde comentÃ¡rios\r\n  // hideComment(el) {\r\n\r\n  //   let display = document.getElementById(el).style.display;\r\n\r\n  //   if (display == \"none\") {\r\n  //     document.getElementById(el).style.display = 'block';\r\n  //   }\r\n  //   else {\r\n  //     document.getElementById(el).style.display = 'none';\r\n  //     console.log(\"Fechou\")\r\n  //   }\r\n\r\n  // }\r\n\r\n  approve(){\r\n    this.ticket.approval = true\r\n    //  Envia o id e o usuÃ¡rio para o mÃ©todo updateItem para a classe authService\r\n     this.ticketService.updateItem(this.ticketId, this.ticket ).subscribe(response => {     \r\n      console.log(this.ticket)\r\n      alert(\"Curtiu\")\r\n    })   \r\n  }\r\n\r\n  disapprove(){\r\n    this.ticket.approval = false\r\n    //Envia o id e o usuÃ¡rio para o mÃ©todo updateItem para a classe authService\r\n    this.ticketService.updateItem(this.ticketId, this.ticket ).subscribe(response => {     \r\n     console.log(this.ticket)\r\n     alert(\"NÃ£o curtiu\")\r\n   })   \r\n  }\r\n\r\n}\r\n\r\n\r\n"],"sourceRoot":"webpack:///","file":"pages-ticket-detail-ticket-detail-module-es5.js"}